{"version":3,"file":"static/js/574.dd3a6786.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/AppContacts/Contacts.styled.js","components/AppContacts/Contacts.jsx"],"sourcesContent":["export const selectContacts = state => state.contacts.items;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter;\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\ndisplay:flex;\nflex-direction: column;\nalign-items: center;\nmargin-left: auto;\nmargin-right: auto;\n`;\n\nexport const Label = styled.label`\ndisplay: flex;\njustify-content: space-between;\nalign-items: center;\nmargin-bottom: 25px;\nflex-direction: column;\n`;\n\nexport const Input = styled.input`\npadding: 1px 5px;\nwidth: 300px;\nheight: 30px;\nfont-size: 14px;\nborder:  ${p => p.theme.colors.borderColor};\nborder-radius: 10px;\noutline: none;\nmargin-top: 5px;\ntransition: border-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    :hover, :focus {\n    border-color: ${p => p.theme.colors.accentBorderInput};\n    background-color: ${p => p.theme.colors.accentInput};\n    }\n`;\n\nexport const Button = styled.button`\nmargin-left: auto;\nmargin-right: auto;\npadding: 10px;\nfont-size: 17px;\nwidth:140px;\nborder-radius: 10px;\nborder: 1px solid #377856;\ncursor: pointer;\nbackground-color:  ${p => p.theme.colors.colorBtn};\nbox-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\ntransition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1),\nbox-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    :hover {\n        background-color: #1ddb6c;\n    }\n`;\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { Form, Label, Input, Button } from './ContactForm.styled';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const resetField = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const onSubmit = evt => {\n    evt.preventDefault();\n    const names = contacts.map(item => item.name);\n    if (names.includes(name)) {\n      return Notify.warning(`${name} is already in contacts`, {\n        position: 'center-top',\n      });\n    }\n    dispatch(addContact({ name: name, number: number }));\n    resetField();\n  };\n\n  const onChange = evt => {\n    switch (evt.currentTarget.name) {\n      case 'name':\n        setName(evt.currentTarget.value);\n        break;\n      case 'number':\n        setNumber(evt.currentTarget.value);\n        break;\n      default:\n        console.log('There is no such value');\n    }\n  };\n\n  return (\n    <Form onSubmit={onSubmit}>\n      <Label>\n        Name\n        <Input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          placeholder=\"Enter the name\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          value={name}\n          onChange={onChange}\n        />\n      </Label>\n      <Label>\n        Number\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          placeholder=\"Enter the number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          value={number}\n          onChange={onChange}\n        />\n      </Label>\n\n      <Button type=\"submit\">Add contact</Button>\n    </Form>\n  );\n};\n","import styled from 'styled-components';\n\n\nexport const Input = styled.input`\n  margin-left: 20px;\n  height: 25px;\n  border-radius: 10px;\n  border: 1px solid ${p => p.theme.colors.colorInputBorder};\n  outline: none;\n  padding: 0 5px 0 10px;\n  font-size: 16px;\n  margin-bottom: 20px;\n  color: ${p => p.theme.colors.colorInput};\n  transition: all 250ms linear;\n  cursor: pointer;\n :hover, \n :focus {\n  border-color: ${p => p.theme.colors.accentBorderInput};\n    background-color:${p => p.theme.colors.accentInput};\n }\n`;\n\nexport const Label = styled.label`\npadding: 10px;\nfont-size: 16px;\nmargin-left: 30px;\n`;\n","import { useDispatch } from 'react-redux';\nimport { Input, Label } from './Filter.styled';\nimport { filterContacts } from 'redux/contacts/slices/filterSlice';\n\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n\n  const contactSearch = evt => {\n    dispatch(filterContacts(evt.currentTarget.value));\n  };\n\n  return (\n    <Label>\n      Search\n      <Input\n        type=\"text\"\n        name=\"filter\"\n        placeholder=\"Start typing a name\"\n        onChange={contactSearch}\n      ></Input>\n    </Label>\n  );\n};\n","import styled from 'styled-components';\n\nconst List = styled.ul`\n list-style: none;\n  width: 430px;\n  margin: 0;\n  padding: 30px;\n  margin-bottom: 40px;\n  border: ${p => p.theme.colors.borderList};\n  border-radius: 5px;\n  background: ${p => p.theme.colors.colorBgList};\n  box-shadow:${p => p.theme.colors.boxShadowList};\n`;\nconst Item = styled.li`\n  display: flex;\n justify-content: space-between;\n list-style: none;\n    :first-child {\n        margin-top:20px;\n    }\n    :not(:last-child) {\n        margin-bottom:15px;\n    }\n`;\n\nconst Button = styled.button`\npadding: 4px 5px;\nwidth: 80px;\nborder-radius: 10px;\nborder: ${p => p.theme.colors.deleteBtnBorder};\ncursor: pointer;\nbackground-color: ${p => p.theme.colors.deleteBtn};\nbox-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\ntransition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1),\nbox-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    :hover {\n        background-color: ${p => p.theme.colors.deleteBtnAccent};\n    }\n`;\n\nexport {  Item, List, Button};\n   \n  \n","import { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts, selectFilter } from 'redux/contacts/selectors';\nimport { deleteContact } from 'redux/contacts/operations';\nimport {  Item,  List,  Button,} from './ContactList.styled';\n\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const filterContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n  const filtered = filterContacts();\n\n  return (\n    <List>\n      {filtered.map(({ id, name, number }) => (\n        <Item key={id}>\n            {name} : {number}\n          <Button\n            type=\"button\"\n            onClick={() => {\n              dispatch(deleteContact(id));\n            }}\n          >\n            Delete\n          </Button>\n        </Item>\n      ))}\n    </List>\n  );\n};\n\n","import styled from 'styled-components';\n\nexport const Container =styled.div`\npadding: 20px;\nmargin-right:auto;\nmargin-left:auto;\nmargin-top:30px;\nwidth:500px;\nfont-size: 16px;\nfont-weight:700;\ncolor: ${p => p.theme.colors.dark};\nbackground-color: ${p => p.theme.colors.colorBg};\nbox-shadow: ${p => p.theme.colors.boxShadow};\nborder-radius: 20px;\n`;\n\n\nexport const Title = styled.h1`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 40px;\n  margin-bottom: 20px;\n color: ${p => p.theme.colors.colorTitle};\n`;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ContactForm } from '../ContactForm/ContactForm';\nimport { Filter } from '../Filter/Filter';\nimport { ContactList } from '../ContactList/ContactList';\nimport { selectIsLoading } from 'redux/contacts/selectors';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { Container, Title } from './Contacts.styled';\nimport { ThreeCircles } from 'react-loader-spinner';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <Title>Phonebook </Title>\n      <ContactForm />\n      <Title>Contacts </Title>\n      <Filter />\n       <ThreeCircles\n          height=\"40\"\n          width=\"40\"\n          color=\"#c8c819\"\n          wrapperStyle={{}}\n          wrapperClass=\"spinner\"\n          visible={isLoading}\n          ariaLabel=\"three-circles-rotating\"\n      />\n      <ContactList />\n    </Container>\n  );\n};\n\nexport default Contacts;\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectFilter","filter","Form","styled","Label","Input","p","theme","colors","borderColor","accentBorderInput","accentInput","Button","colorBtn","ContactForm","useState","name","setName","number","setNumber","dispatch","useDispatch","useSelector","onChange","evt","currentTarget","value","console","log","onSubmit","preventDefault","map","item","includes","Notify","position","addContact","type","pattern","placeholder","title","required","colorInputBorder","colorInput","Filter","filterContacts","List","borderList","colorBgList","boxShadowList","Item","deleteBtnBorder","deleteBtn","deleteBtnAccent","ContactList","filtered","normalizedFilter","toLowerCase","contact","id","onClick","deleteContact","Container","dark","colorBg","boxShadow","Title","colorTitle","useEffect","fetchContacts","height","width","color","wrapperStyle","wrapperClass","visible","ariaLabel"],"sourceRoot":""}